def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
node{
buildName 'Dev -${BUILD_NUMBER}'
buildDescription 'Pipeline Script Scriptedway'
def mavenHome = tool name: "maven3.9.3"
echo " The Node name is : ${env.NODE_NAME}"
echo " The Job name is : ${env.JOB_NAME}"
echo " The Build number is : ${env.BUILD_NUMBER}"
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: '']])
try{

//Checkout Stage
stage('CheckoutCode'){
sendSlackNotifications('STARTED')
git branch: 'development', credentialsId: 'c09f0383-f524-4fdb-ba91-091c3d9f781f', url: 
'https://github.com/mss-devops-may/maven-web-application.git'
}

//Build Stage
stage('Build'){
    
sh "$mavenHome/bin/mvn clean package"
}

//Generate Sonarqube Report
stage('SonarQubeReport'){
sh "$mavenHome/bin/mvn sonar:sonar"
}

//Upload Artifact into Artifactory repo
stage('Nexus Report'){
sh "$mavenHome/bin/mvn deploy" 
}

//Deploy App Into Tomcat Server
stage('DeployAppIntoTomatcat'){
sshagent(['6b09bd12-7422-442f-8971-ab133e0d0c81']) {
  sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.234.19.25:/opt/apache-tomcat-9.0.76/webapps"
}
}
}//Try Closing
catch(e){
currentBuild.result="FAILED"
}
finally{
sendSlackNotifications(currentBuild.result)
}
}//Node Closing
